<!--




xml 



<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:id="@+id/mainlayout"
    android:layout_width="match_parent"

    android:layout_height="match_parent"
    tools:context=".MainActivity">

    <androidx.appcompat.widget.Toolbar
        android:id="@+id/toolbar"
        android:layout_width="match_parent"
        android:layout_height="?attr/actionBarSize"
        android:background="?attr/colorPrimary"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintHorizontal_bias="0.0"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintVertical_bias="0.0"
        app:title="Color Changer" />

    <TextView
        android:id="@+id/txt"
        android:layout_width="284dp"
        android:layout_height="58dp"
        android:fontFamily="sans-serif-light"
        android:text="Long press on the screen"
        android:textAlignment="center"
        android:textColor="#131415"
        android:textSize="24sp"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintHorizontal_bias="0.496"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintVertical_bias="0.499" />

</androidx.constraintlayout.widget.ConstraintLayout>




main  




package com.example.pro6

import android.os.Bundle
import android.view.ContextMenu
import android.view.Menu
import android.view.MenuInflater
import android.view.MenuItem
import android.view.View
import androidx.appcompat.app.AppCompatActivity
import androidx.appcompat.widget.Toolbar
import androidx.constraintlayout.widget.ConstraintLayout

class MainActivity : AppCompatActivity() {
    private lateinit var mainLayout: ConstraintLayout

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main)

        mainLayout = findViewById(R.id.mainlayout)
        registerForContextMenu(mainLayout)

        val toolbar: Toolbar = findViewById(R.id.toolbar)
        setSupportActionBar(toolbar)
    }

    override fun onCreateOptionsMenu(menu: Menu): Boolean {
        val inflater: MenuInflater = menuInflater
        inflater.inflate(R.menu.menu, menu)
        return true
    }

    override fun onOptionsItemSelected(item: MenuItem): Boolean {
        val color = when (item.title) {
            "Dark(Red)" -> R.color.red_dark
            "Light(Red)" -> R.color.red_light
            "Dark(Green)" -> R.color.green_dark
            "Light(Green)" -> R.color.green_light
            "Dark(Blue)" -> R.color.blue_dark
            "Light(Blue)" -> R.color.blue_light
            "Dark(Yellow)" -> R.color.yellow_dark
            "Light(Yellow)" -> R.color.yellow_light
            else -> return super.onOptionsItemSelected(item)
        }
        mainLayout.setBackgroundColor(resources.getColor(color, theme))
        return true
    }

    override fun onCreateContextMenu(menu: ContextMenu, v: View, menuInfo: ContextMenu.ContextMenuInfo?) {
        super.onCreateContextMenu(menu, v, menuInfo)
        val inflater: MenuInflater = menuInflater
        inflater.inflate(R.menu.menu, menu)
    }

    override fun onContextItemSelected(item: MenuItem): Boolean {
        val color = when (item.title) {
            "Dark(Red)" -> R.color.red_dark
            "Light(Red)" -> R.color.red_light
            "Dark(Green)" -> R.color.green_dark
            "Light(Green)" -> R.color.green_light
            "Dark(Blue)" -> R.color.blue_dark
            "Light(Blue)" -> R.color.blue_light
            "Dark(Yellow)" -> R.color.yellow_dark
            "Light(Yellow)" -> R.color.yellow_light
            else -> return super.onContextItemSelected(item)
        }
        mainLayout.setBackgroundColor(resources.getColor(color, theme))
        return true
    }
}





manu



<?xml version="1.0" encoding="utf-8"?>
<menu xmlns:android="http://schemas.android.com/apk/res/android">
    <item
        android:id="@+id/menu_red"
        android:title="Red">
        <menu>
            <item
                android:id="@+id/submenu_red_dark"
                android:title="Dark(Red)"

                />
            <item
                android:id="@+id/submenu_red_light"
                android:title="Light(Red)" />

        </menu>

    </item>



    <item
        android:id="@+id/menu_green"
        android:title="Green" >
        <menu>
            <item
                android:id="@+id/submenu_green_dark"
                android:title="Dark(Green)"
                />
            <item
                android:id="@+id/submene_green_light"
                android:title="Light(Green)"
                />


        </menu>

    </item>

    <item
        android:id="@+id/menu_blue"
        android:title="Blue">
        <menu>
            <item
                android:id="@+id/submenu_blue_dark"
                android:title="Dark(Blue)"

                />
            <item
                android:id="@+id/submenu_blue_light"
                android:title="Light(Blue)"

                />

        </menu>>

    </item>

    <item
        android:id="@+id/menu_yellow"
        android:title="Yellow">
        <menu>
            <item
                android:id="@+id/submenu_yellow_dark"
                android:title="Dark(Yellow)"

                />
            <item
                android:id="@+id/submenu_yellow_light"
                android:title="Light(Yellow)"

                />
        </menu>
    </item>


</menu>




color





<?xml version="1.0" encoding="utf-8"?>
<resources>
    <color name="red">#FF0000</color>
    <color name="green">#00FF00</color>
    <color name="blue">#0000FF</color>
    <color name="yellow">#FFFF00</color>

    <color name="red_dark">#800000</color>
    <color name="green_dark">#008000</color>
    <color name="blue_dark">#000080</color>
    <color name="yellow_dark">#808000</color>

    <color name="red_light">#FFA07A</color>
    <color name="green_light">#90EE90</color>
    <color name="blue_light">#87CEEB</color>
    <color name="yellow_light">#FFFF99</color>
</resources>




-->